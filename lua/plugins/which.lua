return {
  { -- Useful plugin to show you pending keybinds.
    "folke/which-key.nvim",
    lazy = true,
    event = "VeryLazy", -- Sets the loading event to 'VeryLazy'
    opts = {
      icons = {
        -- set icon mappings to true if you have a Nerd Font
        mappings = vim.g.have_nerd_font,
        -- If you are using a Nerd Font: set icons.keys to an empty table which will use the
        -- default whick-key.nvim defined Nerd Font icons, otherwise define a string table
        keys = vim.g.have_nerd_font and {} or {
          Up = "<Up> ",
          Down = "<Down> ",
          Left = "<Left> ",
          Right = "<Right> ",
          C = "<C-…> ",
          M = "<M-…> ",
          D = "<D-…> ",
          S = "<S-…> ",
          CR = "<CR> ",
          Esc = "<Esc> ",
          ScrollWheelDown = "<ScrollWheelDown> ",
          ScrollWheelUp = "<ScrollWheelUp> ",
          NL = "<NL> ",
          BS = "<BS> ",
          Space = "<Space> ",
          Tab = "<Tab> ",
          F1 = "<F1>",
          F2 = "<F2>",
          F3 = "<F3>",
          F4 = "<F4>",
          F5 = "<F5>",
          F6 = "<F6>",
          F7 = "<F7>",
          F8 = "<F8>",
          F9 = "<F9>",
          F10 = "<F10>",
          F11 = "<F11>",
          F12 = "<F12>",
        },
      },

      -- Document existing key chains
      spec = {
        { "<leader>c",   group = "[C]ode",                          mode = { "n", "x" } },
        { "<leader>d",   group = "[D]ebug",                         mode = { "n", "v" } },
        { "<leader>db",  group = "[D]ebug [B]reakpoints" },
        { "<leader>r",   group = "[R]ename" },
        { "<leader>t",   group = "[T]oggle" },
        { "<leader>g",   group = "[G]it" },
        { "<leader>gs",  group = "[G]it[S]igns",                    mode = { "n", "v" } },
        { "<leader>gg",  group = "Neo[G]it" },
        { "<leader>x",   group = "[X]Lists",                        mode = { "n" } },
        { "<leader>f",   group = "[F]ind/Telescope" },
        { "<leader>o",   group = "[O]pencode" },
        { "<leader>e",   group = "[E]xplorer (Yazi)" },
        { "<leader>ft",  group = "[F]ind [T]odo" },
        { "<leader>fT",  group = "[F]ind [T]odo Fix" },
        { "[",           group = "+Prev/Start" },
        { "]",           group = "+Next/End" },
        -- Neovim motions and operators
        { "w",           desc = "Next word" },
        { "b",           desc = "Previous word" },
        { "e",           desc = "End of word" },
        { "W",           desc = "Next WORD" },
        { "B",           desc = "Previous WORD" },
        { "E",           desc = "End of WORD" },
        { "$",           desc = "End of line" },
        { "^",           desc = "Start of line (non-blank)" },
        { "0",           desc = "Start of line" },
        { "f",           desc = "Find character forward" },
        { "F",           desc = "Find character backward" },
        { "t",           desc = "To character forward" },
        { "T",           desc = "To character backward" },
        { "%",           desc = "Matching pair" },
        { "G",           desc = "Go to line" },
        { "gg",          desc = "Go to first line" },
        { "H",           desc = "Top of screen" },
        { "M",           desc = "Middle of screen" },
        { "L",           desc = "Bottom of screen" },
        { "<C-u>",       desc = "Scroll up half page" },
        { "<C-d>",       desc = "Scroll down half page" },
        { "<C-f>",       desc = "Scroll down page" },
        { "<C-b>",       desc = "Scroll up page" },
        { "d",           desc = "Delete operator" },
        { "c",           desc = "Change operator" },
        { "y",           desc = "Yank operator" },
        { "v",           desc = "Visual mode" },
        { "V",           desc = "Visual line mode" },
        { "<C-v>",       desc = "Visual block mode" },

        -- ===== ADVANCED NEOVIM MOTIONS =====
        -- Left-right motions
        { "h",           desc = "Left" },
        { "l",           desc = "Right" },
        { "g_",          desc = "Last non-blank character" },
        { "g0",          desc = "First character of screen line" },
        { "g^",          desc = "First non-blank of screen line" },
        { "gm",          desc = "Middle of screen line" },
        { "gM",          desc = "Middle of text line" },
        { "g$",          desc = "Last character of screen line" },
        { "g<End>",      desc = "Last non-blank of screen line" },
        { "|",           desc = "To screen column" },

        -- Up-down motions
        { "k",           desc = "Up" },
        { "j",           desc = "Down" },
        { "gk",          desc = "Up (display line)" },
        { "gj",          desc = "Down (display line)" },
        { "-",           desc = "Up to first non-blank" },
        { "+",           desc = "Down to first non-blank" },
        { "_",           desc = "Down to first non-blank" },
        { "<C-End>",     desc = "Last line, last character" },

        -- Word motions
        { "ge",          desc = "End of previous word" },

        -- Text object motions
        { "(",           desc = "Previous sentence" },
        { ")",           desc = "Next sentence" },
        { "{",           desc = "Previous paragraph" },
        { "}",           desc = "Next paragraph" },
        { "]]",          desc = "Next section start" },
        { "[[",          desc = "Previous section start" },
        { "][",          desc = "Next section end" },
        { "[]",          desc = "Previous section end" },
        { ";",           desc = "Repeat last f/t/F/T" },
        { ",",           desc = "Repeat last f/t/F/T opposite" },
        { "#",           desc = "Previous #if/#else" },

        -- Various motions
        { "[(",          desc = "Previous unmatched (" },
        { "[{",          desc = "Previous unmatched {" },
        { "])",          desc = "Next unmatched )" },
        { "]}",          desc = "Next unmatched }" },
        { "]m",          desc = "Next method start" },
        { "]M",          desc = "Next method end" },
        { "[m",          desc = "Previous method start" },
        { "[M",          desc = "Previous method end" },
        { "[#",          desc = "Previous #if/#else" },
        { "]#",          desc = "Next #else/#endif" },

        -- Additional operators
        { "gu",          desc = "Make lowercase" },
        { "gU",          desc = "Make uppercase" },
        { "g~",          desc = "Toggle case" },
        { "gq",          desc = "Format text" },
        { "gw",          desc = "Format text (no cursor move)" },
        { "g?",          desc = "ROT13 encode" },
        { ">",           desc = "Shift right" },
        { "<",           desc = "Shift left" },
        { "zf",          desc = "Define fold" },
        { "g@",          desc = "Call operatorfunc" },

        -- Forced motions (after operators)
        { "v",           desc = "Force charwise (after operator)" },
        { "V",           desc = "Force linewise (after operator)" },
        { "<C-v>",       desc = "Force blockwise (after operator)" },

        -- Text objects
        { "aw",          desc = "A word" },
        { "iw",          desc = "Inner word" },
        { "aW",          desc = "A WORD" },
        { "iW",          desc = "Inner WORD" },
        { "as",          desc = "A sentence" },
        { "is",          desc = "Inner sentence" },
        { "ap",          desc = "A paragraph" },
        { "ip",          desc = "Inner paragraph" },
        { "a]",          desc = "A [] block" },
        { "i]",          desc = "Inner [] block" },
        { "a)",          desc = "A () block" },
        { "i)",          desc = "Inner () block" },
        { "a>",          desc = "A <> block" },
        { "i>",          desc = "Inner <> block" },
        { "at",          desc = "A tag block" },
        { "it",          desc = "Inner tag block" },
        { "a\"",         desc = "A quoted string" },
        { "i\"",         desc = "Inner quoted string" },
        { "a'",          desc = "A single quoted string" },
        { "i'",          desc = "Inner single quoted string" },
        { "a`",          desc = "A backtick string" },
        { "i`",          desc = "Inner backtick string" },
        { "aB",          desc = "A {} block" },
        { "iB",          desc = "Inner {} block" },

        -- Jump commands
        { "<C-o>",       desc = "Older position in jumplist" },
        { "<C-i>",       desc = "Newer position in jumplist" },
        { "g;",          desc = "Older position in changelist" },
        { "g,",          desc = "Newer position in changelist" },

        -- Additional scrolling/centering
        { "zz",          desc = "Center cursor line" },
        { "zt",          desc = "Cursor line at top" },
        { "zb",          desc = "Cursor line at bottom" },
        { "<C-e>",       desc = "Scroll down one line" },
        { "<C-y>",       desc = "Scroll up one line" },

        -- Position/info
        { "<C-g>",       desc = "Show cursor position" },
        { "g<C-g>",      desc = "Show detailed position" },

        -- Individual keymap registrations
        -- Telescope
        { "<leader>ff",  desc = "Find Files" },
        { "<leader>f/",  desc = "Live Grep" },
        { "<leader>fb",  desc = "Buffers" },
        { "<leader>fh",  desc = "Help Tags" },
        { "<leader>fo",  desc = "Old Files" },
        { "<leader>fz",  desc = "Fuzzy Find in Buffer" },
        { "<leader>fg",  desc = "Git Files" },
        { "<leader>fs",  desc = "Git Status" },
        { "<leader>fc",  desc = "Git Commits" },
        { "<leader>fB",  desc = "Git Branches" },
        { "<leader>fH",  desc = "Git File History" },
        { "<leader>fG",  desc = "Advanced Git Search" },
        -- Opencode
        { "<leader>oA",  desc = "Ask opencode" },
        { "<leader>oa",  desc = "Ask opencode about this" },
        { "<leader>ot",  desc = "Toggle embedded opencode" },
        { "<leader>on",  desc = "New session" },
        { "<leader>oy",  desc = "Copy last message" },
        { "<S-C-u>",     desc = "Scroll messages up" },
        { "<S-C-d>",     desc = "Scroll messages down" },
        { "<leader>op",  desc = "Select prompt" },
        { "<leader>oe",  desc = "Explain code near cursor" },
        -- Yazi
        { "<leader>e",   desc = "Open yazi at current file" },
        { "<c-up>",      desc = "Resume last yazi session" },
        -- Code/LSP
        { "<leader>cf",  desc = "Format buffer" },
        { "<leader>cs",  desc = "Document symbols" },
        { "<leader>cws", desc = "Workspace symbols" },
        -- Debug
        { "<F5>",        desc = "Debug: Start/Continue" },
        { "<F10>",       desc = "Debug: Step Over" },
        { "<F11>",       desc = "Debug: Step Into" },
        { "<F12>",       desc = "Debug: Step Out" },
        { "<leader>dB",  desc = "Debug: Set Conditional Breakpoint" },
        { "<leader>dbc", desc = "Debug: Clear All Breakpoints" },
        { "<leader>dbl", desc = "Debug: List Breakpoints" },
        { "<leader>dl",  desc = "Debug: Run Last" },
        { "<leader>de",  desc = "Debug: Evaluate Expression" },
        { "<leader>dw",  desc = "Debug: Add Watch" },
        { "<leader>dr",  desc = "Debug: Toggle REPL" },
        { "<leader>dc",  desc = "Debug: Run to Cursor" },
        { "<leader>dp",  desc = "Debug: Pause" },
        { "<leader>dx",  desc = "Debug: Terminate" },
        { "<leader>dq",  desc = "Debug: Quit" },
        -- Diagnostics
        { "<leader>xx",  desc = "Diagnostics to quickfix" },
        { "<leader>xX",  desc = "Buffer diagnostics to quickfix" },
        { "<leader>xl",  desc = "Open location list" },
        { "<leader>xq",  desc = "Open quickfix list" },
        { "<leader>xc",  desc = "Close quickfix/location lists" },
        { "<leader>xd",  desc = "Show diagnostic" },
        { "<leader>xL",  desc = "Diagnostics to location list" },
        { "[d",          desc = "Previous diagnostic" },
        { "]d",          desc = "Next diagnostic" },
        -- Todo
        { "]t",          desc = "Next Todo Comment" },
        { "[t",          desc = "Previous Todo Comment" },
        { "<leader>xt",  desc = "Todo location list" },
        { "<leader>xT",  desc = "Todo quickfix" },
        { "<leader>ft",  desc = "Todo (Telescope)" },
        { "<leader>fT",  desc = "Todo/Fix/Fixme (Telescope)" },
      },
    },
  },
}
-- vim: ts=2 sts=2 sw=2 et
